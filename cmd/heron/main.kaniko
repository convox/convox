package main

import (
	"flag"
	"fmt"
	"io"
	"log"
	"path/filepath"
	"time"

	ac "k8s.io/api/core/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/client-go/kubernetes"
	"k8s.io/client-go/tools/clientcmd"
	"k8s.io/client-go/util/homedir"
)

func main() {
	var kubeconfig *string
	if home := homedir.HomeDir(); home != "" {
		kubeconfig = flag.String("kubeconfig", filepath.Join(home, ".kube", "config"), "(optional) absolute path to the kubeconfig file")
	} else {
		kubeconfig = flag.String("kubeconfig", "", "absolute path to the kubeconfig file")
	}
	flag.Parse()

	// use the current context in kubeconfig
	config, err := clientcmd.BuildConfigFromFlags("", *kubeconfig)
	if err != nil {
		panic(err.Error())
	}

	// create the clientset
	clientset, err := kubernetes.NewForConfig(config)
	if err != nil {
		panic(err.Error())
	}

	pod, err := clientset.CoreV1().Pods("default").Create(&ac.Pod{
		ObjectMeta: v1.ObjectMeta{
			GenerateName: "kaniko-",
		},
		Spec: ac.PodSpec{
			RestartPolicy: "Never",
			Containers: []ac.Container{{
				Name:  "kaniko",
				Image: "gcr.io/kaniko-project/executor:latest",
				Args: []string{
					"--dockerfile=/Dockerfile",
					"--context=s3://dev4-storage-20220602155518728300000001/wordpress/tmp/12d023cb208860abbe0517e3651eb9.tz",
					"--destination=470778123668.dkr.ecr.us-east-1.amazonaws.com/heron-test:nodejs",
					"--destination=470778123668.dkr.ecr.us-east-1.amazonaws.com/heron-test:nodejs.12",
					"--destination=470778123668.dkr.ecr.us-east-1.amazonaws.com/heron-test:nodejs.13",
				},
				Env: []ac.EnvVar{
					{Name: "AWS_REGION", Value: "us-east-1"},
					{Name: "AWS_SDK_LOAD_CONFIG", Value: "true"},
					{Name: "AWS_ACCESS_KEY_ID", Value: "ASIAW3HEQCWKHPIA6JRS"},
					{Name: "AWS_SECRET_ACCESS_KEY", Value: "D2u/ZUzydzLoMBC3nX88ZaEJUW8RKMGwaL3BvD3i"},
					{Name: "AWS_SESSION_TOKEN", Value: "IQoJb3JpZ2luX2VjENv//////////wEaCXVzLWVhc3QtMSJGMEQCIB4zq13aNxJrVJxMaGT1Ztd3EaSIwq1/woP1SvhCt4QKAiA8GpRpTfXkwwyPGKZdcv09WZyEbfSgvsuzD+uxMy+XjCqTAwjz//////////8BEAAaDDQ3MDc3ODEyMzY2OCIMvSGgS54qAq3plS3MKucCRXhQoI5bQh0wUrz91yEXFxp/YsyjYhYt/TCTYpVhNBBFJ/W2t6pvdQjoAbWaXX0HCJsVJ7dfo6RhMweqgVmcVoTkw05AB98gQ/vNpruZxZu7Lu/yx7/Lrb3rjT2lwFM3Wi+9MeL8An3gjF63xGGNsFH66bOu4x+Z9BvQJgfeogfEvXRXxip/RylraN+iuso5cHOhpWQ+cpeJO01hkqe+gCiQPEtiL28GIY1SHrW7RWwDGXuKA11SOmSVwE2GMKWUCJC/6u0+5CTKtucpqHTeb1Oo/b7+iH4F6qRgsIyFNlhMoCiEicpqtHqN7wdwPNAgeEmK/zYzcsXAu1n8JM1v1Su07H9PfkwWNKaufUNVmG8O6KAOF+yfRU0Lp29/vcyFtp/OI8qS/0G0/qU6wSZMj7j9BS/AhU1nYnt8rTUBCz7Jr7kjz0PsbQqtGeUxTnvwJoKmoS7n9FpEKIfJ2YAJ9VKmrCg31SgwmYvtlQY6pwGRZ6iSXWuZP53cN7BHEqNl/8EhJj4lygbNXtcLLColntDg798VvJbgh8p0AH2HX49lkorJZjG9QU5hhdS782h5WUYgKYXPY/LKJnDyq8OQ96mye0rPUaj5W0H43gHRcpL5eOVYE0X/hq3FhrU7x1kbAmqxNuN9vg3dMG72DHn3FrGCh0LMSqgC/R7lZwIgkJEZofDE5e98HvUanMzlFkKAuCgJNLY6Cg=="},
				},
			}},
		},
	})
	if err != nil {
		panic(err.Error())
	}
	// tailLogs(pod.Name, kubeconfig)

	w, err := clientset.CoreV1().Pods("default").Watch(v1.ListOptions{FieldSelector: fmt.Sprintf("metadata.name=%s", pod.Name)})
	if err != nil {
		panic(err)
	}
	defer w.Stop()

	tail := false
	now := time.Now()
	// go func() {
	for event := range w.ResultChan() {
		// fmt.Printf("Type: %v\n", event.Type)
		p, ok := event.Object.(*ac.Pod)
		if !ok {
			log.Fatal("unexpected type")
		}
		// fmt.Println(p.Status.ContainerStatuses)
		fmt.Println(p.Status.Phase)
		if p.Status.Phase == "Succeeded" {
			err = clientset.CoreV1().Pods("default").Delete(p.Name, &v1.DeleteOptions{})
			if err != nil {
				panic(err)
			}
			break
		}
		if p.Status.Phase == "Running" && !tail {
			tail = true
			tailLogs(p.Name, kubeconfig)
		}
		if p.Status.Phase == "Pending" && time.Since(now) > time.Second*10 {
			println("stuck in pending state. terminating")
			err = clientset.CoreV1().Pods("default").Delete(p.Name, &v1.DeleteOptions{})
			if err != nil {
				panic(err)
			}
			break
			// tailLogs(p.Name, kubeconfig)
		}
		if p.Status.Phase == "Failed" && !tail {
			tail = true
			tailLogs(p.Name, kubeconfig)

			println("build failed. terminating")
			err = clientset.CoreV1().Pods("default").Delete(p.Name, &v1.DeleteOptions{})
			if err != nil {
				panic(err)
			}
			break
			// tailLogs(p.Name, kubeconfig)
		}
	}
	println("finished")
	// }()

	// time.Sleep(200 * time.Second)

}

func tailLogs(name string, kubeconfig *string) {
	println("===tailing===")
	// use the current context in kubeconfig
	config, err := clientcmd.BuildConfigFromFlags("", *kubeconfig)
	if err != nil {
		panic(err.Error())
	}

	// create the clientset
	clientset, err := kubernetes.NewForConfig(config)
	if err != nil {
		panic(err.Error())
	}

	req := clientset.CoreV1().Pods("default").GetLogs(name, &ac.PodLogOptions{Follow: true})
	stream, err := req.Stream()
	if err != nil {
		fmt.Printf("%x+", err)
		panic(err)
	}

	defer stream.Close()

	for {
		buf := make([]byte, 2000)
		numBytes, err := stream.Read(buf)
		// println(numBytes)
		if err != nil && err == io.EOF {
			break
		}
		if numBytes == 0 {
			continue
		}
		if err != nil {
			fmt.Printf("%x+", err)
			panic(err)
		}
		message := string(buf[:numBytes])
		fmt.Print(message)
	}
	println("===end===")
}

// export AWS_ACCESS_KEY_ID="ASIAW3HEQCWKHPIA6JRS"
// export AWS_SECRET_ACCESS_KEY="D2u/ZUzydzLoMBC3nX88ZaEJUW8RKMGwaL3BvD3i"
// export AWS_SESSION_TOKEN="IQoJb3JpZ2luX2VjENv//////////wEaCXVzLWVhc3QtMSJGMEQCIB4zq13aNxJrVJxMaGT1Ztd3EaSIwq1/woP1SvhCt4QKAiA8GpRpTfXkwwyPGKZdcv09WZyEbfSgvsuzD+uxMy+XjCqTAwjz//////////8BEAAaDDQ3MDc3ODEyMzY2OCIMvSGgS54qAq3plS3MKucCRXhQoI5bQh0wUrz91yEXFxp/YsyjYhYt/TCTYpVhNBBFJ/W2t6pvdQjoAbWaXX0HCJsVJ7dfo6RhMweqgVmcVoTkw05AB98gQ/vNpruZxZu7Lu/yx7/Lrb3rjT2lwFM3Wi+9MeL8An3gjF63xGGNsFH66bOu4x+Z9BvQJgfeogfEvXRXxip/RylraN+iuso5cHOhpWQ+cpeJO01hkqe+gCiQPEtiL28GIY1SHrW7RWwDGXuKA11SOmSVwE2GMKWUCJC/6u0+5CTKtucpqHTeb1Oo/b7+iH4F6qRgsIyFNlhMoCiEicpqtHqN7wdwPNAgeEmK/zYzcsXAu1n8JM1v1Su07H9PfkwWNKaufUNVmG8O6KAOF+yfRU0Lp29/vcyFtp/OI8qS/0G0/qU6wSZMj7j9BS/AhU1nYnt8rTUBCz7Jr7kjz0PsbQqtGeUxTnvwJoKmoS7n9FpEKIfJ2YAJ9VKmrCg31SgwmYvtlQY6pwGRZ6iSXWuZP53cN7BHEqNl/8EhJj4lygbNXtcLLColntDg798VvJbgh8p0AH2HX49lkorJZjG9QU5hhdS782h5WUYgKYXPY/LKJnDyq8OQ96mye0rPUaj5W0H43gHRcpL5eOVYE0X/hq3FhrU7x1kbAmqxNuN9vg3dMG72DHn3FrGCh0LMSqgC/R7lZwIgkJEZofDE5e98HvUanMzlFkKAuCgJNLY6Cg=="
