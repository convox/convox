apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{.Namespace}}
  name: resource-{{ k8sname .Name }}
  labels:
    system: convox
    rack: {{.Rack}}
    app: {{.App}}
    type: resource
    resource: {{.Name}}
data:
  URL: "redis://resource-{{ k8sname .Name }}.{{.Namespace}}.svc.cluster.local:6379"
  USER: ""
  PASS: ""
  HOST: "resource-{{ k8sname .Name }}.{{.Namespace}}.svc.cluster.local"
  PORT: "6379"
  NAME: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{.Namespace}}
  name: resource-{{ k8sname .Name }}
  annotations:
    atom.conditions: Available=True,Progressing=True/NewReplicaSetAvailable
  labels:
    system: convox
    rack: {{.Rack}}
    app: {{.App}}
    type: resource
    kind: redis
    resource: {{.Name}}
spec:
  selector:
    matchLabels:
      system: convox
      rack: {{.Rack}}
      app: {{.App}}
      resource: {{.Name}}
  replicas: 1
  template:
    metadata:
      labels:
        system: convox
        rack: {{.Rack}}
        app: {{.App}}
        type: resource
        resource: {{.Name}}
    spec:
      containers:
      - name: redis
        image: redis:{{ coalesce (index .Parameters "version") "4.0.10" }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{.Namespace}}
  name: resource-{{ k8sname .Name }}
  labels:
    system: convox
    rack: {{.Rack}}
    app: {{.App}}
    type: resource
    resource: {{.Name}}
spec:
  type: NodePort
  ports:
  - port: 6379
  selector:
    system: convox
    rack: {{.Rack}}
    app: {{.App}}
    resource: {{.Name}}
